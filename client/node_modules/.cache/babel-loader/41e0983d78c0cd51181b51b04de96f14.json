{"ast":null,"code":"import _defineProperty from \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/src/components/views/Product/Product.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProductById } from '../../../redux/productsRedux';\nimport { addCartProduct } from '../../../redux/cartRedux';\nimport { ProductCount } from '../../features/ProductCount/ProductCount';\nimport { PhotoGallery } from '../../features/PhotoGallery/PhotoGallery';\nimport { formInputNumberParser } from '../../../utils';\nimport styles from './Product.module.scss';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderData: {\n        finalPrice: 0,\n        quantity: 0\n      }\n    };\n\n    this.handleChange = event => {\n      const orderData = this.state.orderData;\n      const _event$target = event.target,\n            value = _event$target.value,\n            id = _event$target.id;\n      const product = this.props.product;\n      const parsedValue = formInputNumberParser(value);\n      const totalPrice = parsedValue * product.price;\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          [id]: parsedValue,\n          totalPrice: totalPrice\n        })\n      });\n    };\n\n    this.decreaseProductQuantity = () => {\n      const orderData = this.state.orderData;\n      const product = this.props.product;\n\n      if (orderData.quantity === 0) {\n        return;\n      }\n\n      const newQuantity = orderData.quantity - 1;\n      const totalPrice = newQuantity * product.price;\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          quantity: newQuantity,\n          totalPrice: totalPrice\n        })\n      });\n    };\n\n    this.increaseProductQuantity = () => {\n      const orderData = this.state.orderData;\n      const product = this.props.product;\n\n      if (orderData.quantity === 999) {\n        return;\n      }\n\n      const newQuantity = orderData.quantity + 1;\n      const totalPrice = newQuantity * product.price;\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          quantity: newQuantity,\n          totalPrice: totalPrice\n        })\n      });\n    };\n\n    this.addToCart = () => {\n      const orderData = this.state.orderData;\n      const _this$props = this.props,\n            product = _this$props.product,\n            addCartProduct = _this$props.addCartProduct;\n      const cartProduct = {};\n\n      if (orderData.price !== 0) {\n        cartProduct.photo = product.photo[0];\n        cartProduct.name = product.name;\n        cartProduct.quantity = orderData.quantity;\n        cartProduct.price = orderData.totalPrice;\n        cartProduct.description = '';\n        addCartProduct(cartProduct);\n      } else {\n        alert('Please pick at least one product');\n      }\n    };\n  }\n\n  render() {\n    const product = this.props.product;\n    const orderData = this.state.orderData;\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, product.name), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, product.description), React.createElement(PhotoGallery, {\n      images: product.photo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(ProductCount, {\n      handleChange: this.handleChange,\n      increase: this.increaseProductQuantity,\n      decrease: this.decreaseProductQuantity,\n      quantity: orderData.quantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Price: \", orderData.totalPrice, \" $\")), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Add to cart\"))));\n  }\n\n}\n\nComponent.propTypes = {\n  product: PropTypes.object,\n  addCartProduct: PropTypes.func\n};\n\nconst mapStateToProps = (state, props) => ({\n  product: getProductById(state, props.match.params.id)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addCartProduct: cartProduct => dispatch(addCartProduct(cartProduct))\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport { //Component as Product,\nContainer as Product, Component as ProductComponent };","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/src/components/views/Product/Product.js"],"names":["React","PropTypes","connect","getProductById","addCartProduct","ProductCount","PhotoGallery","formInputNumberParser","styles","Paper","Card","CardActions","CardContent","Typography","Button","Component","state","orderData","finalPrice","quantity","handleChange","event","target","value","id","product","props","parsedValue","totalPrice","price","setState","decreaseProductQuantity","newQuantity","increaseProductQuantity","addToCart","cartProduct","photo","name","description","alert","render","propTypes","object","func","mapStateToProps","match","params","mapDispatchToProps","dispatch","Container","Product","ProductComponent"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,YAAT,QAA6B,0CAA7B;AACA,SAASC,YAAT,QAA6B,0CAA7B;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,SAAN,SAAwBf,KAAK,CAACe,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACNC,MAAAA,SAAS,EAAE;AACTC,QAAAA,UAAU,EAAE,CADH;AAETC,QAAAA,QAAQ,EAAE;AAFD;AADL,KAF8B;;AAAA,SActCC,YAdsC,GActBC,KAAD,IAAW;AAAA,YAChBJ,SADgB,GACF,KAAKD,KADH,CAChBC,SADgB;AAAA,4BAEFI,KAAK,CAACC,MAFJ;AAAA,YAEhBC,KAFgB,iBAEhBA,KAFgB;AAAA,YAETC,EAFS,iBAETA,EAFS;AAAA,YAGhBC,OAHgB,GAGJ,KAAKC,KAHD,CAGhBD,OAHgB;AAKxB,YAAME,WAAW,GAAGpB,qBAAqB,CAACgB,KAAD,CAAzC;AACA,YAAMK,UAAU,GAAGD,WAAW,GAAGF,OAAO,CAACI,KAAzC;AAEA,WAAKC,QAAL,CAAc;AACZb,QAAAA,SAAS,oBACJA,SADI;AAEP,WAACO,EAAD,GAAMG,WAFC;AAGPC,UAAAA,UAAU,EAAEA;AAHL;AADG,OAAd;AAOD,KA7BqC;;AAAA,SA+BtCG,uBA/BsC,GA+BZ,MAAM;AAAA,YACtBd,SADsB,GACR,KAAKD,KADG,CACtBC,SADsB;AAAA,YAEtBQ,OAFsB,GAEV,KAAKC,KAFK,CAEtBD,OAFsB;;AAI9B,UAAIR,SAAS,CAACE,QAAV,KAAuB,CAA3B,EAA8B;AAC5B;AACD;;AAED,YAAMa,WAAW,GAAGf,SAAS,CAACE,QAAV,GAAqB,CAAzC;AAEA,YAAMS,UAAU,GAAGI,WAAW,GAAGP,OAAO,CAACI,KAAzC;AAEA,WAAKC,QAAL,CAAc;AACZb,QAAAA,SAAS,oBACJA,SADI;AAEPE,UAAAA,QAAQ,EAAEa,WAFH;AAGPJ,UAAAA,UAAU,EAAEA;AAHL;AADG,OAAd;AAOD,KAlDqC;;AAAA,SAoDtCK,uBApDsC,GAoDZ,MAAM;AAAA,YACtBhB,SADsB,GACR,KAAKD,KADG,CACtBC,SADsB;AAAA,YAEtBQ,OAFsB,GAEV,KAAKC,KAFK,CAEtBD,OAFsB;;AAI9B,UAAIR,SAAS,CAACE,QAAV,KAAuB,GAA3B,EAAgC;AAC9B;AACD;;AAED,YAAMa,WAAW,GAAGf,SAAS,CAACE,QAAV,GAAqB,CAAzC;AACA,YAAMS,UAAU,GAAGI,WAAW,GAAGP,OAAO,CAACI,KAAzC;AAEA,WAAKC,QAAL,CAAc;AACZb,QAAAA,SAAS,oBACJA,SADI;AAEPE,UAAAA,QAAQ,EAAEa,WAFH;AAGPJ,UAAAA,UAAU,EAAEA;AAHL;AADG,OAAd;AAOD,KAtEqC;;AAAA,SAwEtCM,SAxEsC,GAwE1B,MAAM;AAAA,YACRjB,SADQ,GACM,KAAKD,KADX,CACRC,SADQ;AAAA,0BAEoB,KAAKS,KAFzB;AAAA,YAERD,OAFQ,eAERA,OAFQ;AAAA,YAECrB,cAFD,eAECA,cAFD;AAIhB,YAAM+B,WAAW,GAAG,EAApB;;AAEA,UAAGlB,SAAS,CAACY,KAAV,KAAoB,CAAvB,EAA0B;AACxBM,QAAAA,WAAW,CAACC,KAAZ,GAAoBX,OAAO,CAACW,KAAR,CAAc,CAAd,CAApB;AACAD,QAAAA,WAAW,CAACE,IAAZ,GAAmBZ,OAAO,CAACY,IAA3B;AACAF,QAAAA,WAAW,CAAChB,QAAZ,GAAuBF,SAAS,CAACE,QAAjC;AACAgB,QAAAA,WAAW,CAACN,KAAZ,GAAoBZ,SAAS,CAACW,UAA9B;AACAO,QAAAA,WAAW,CAACG,WAAZ,GAA0B,EAA1B;AAEAlC,QAAAA,cAAc,CAAC+B,WAAD,CAAd;AACD,OARD,MASK;AACHI,QAAAA,KAAK,CAAC,kCAAD,CAAL;AACD;AACF,KA1FqC;AAAA;;AA4FtCC,EAAAA,MAAM,GAAG;AAAA,UACAf,OADA,GACW,KAAKC,KADhB,CACAD,OADA;AAAA,UAECR,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;AAIP,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,OAAO,CAACY,IADX,CADF,EAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,OAAO,CAACa,WADX,CAJF,EAOE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAEb,OAAO,CAACW,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAE,KAAKhB,YAAjC;AAA+C,MAAA,QAAQ,EAAE,KAAKa,uBAA9D;AAAuF,MAAA,QAAQ,EAAE,KAAKF,uBAAtG;AAA+H,MAAA,QAAQ,EAAEd,SAAS,CAACE,QAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACUF,SAAS,CAACW,UADpB,OATF,CADF,EAcE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKM,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAdF,CADF,CADF;AAsBD;;AAtHqC;;AAAlCnB,S,CASG0B,S,GAAY;AACjBhB,EAAAA,OAAO,EAAExB,SAAS,CAACyC,MADF;AAEjBtC,EAAAA,cAAc,EAAEH,SAAS,CAAC0C;AAFT,C;;AAgHrB,MAAMC,eAAe,GAAG,CAAC5B,KAAD,EAAQU,KAAR,MAAmB;AACzCD,EAAAA,OAAO,EAAEtB,cAAc,CAACa,KAAD,EAAQU,KAAK,CAACmB,KAAN,CAAYC,MAAZ,CAAmBtB,EAA3B;AADkB,CAAnB,CAAxB;;AAIA,MAAMuB,kBAAkB,GAAGC,QAAQ,KAAK;AACtC5C,EAAAA,cAAc,EAAE+B,WAAW,IAAIa,QAAQ,CAAC5C,cAAc,CAAC+B,WAAD,CAAf;AADD,CAAL,CAAnC;;AAIA,MAAMc,SAAS,GAAG/C,OAAO,CAAC0C,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChC,SAA7C,CAAlB;AAEA,SACE;AACAkC,SAAS,IAAIC,OAFf,EAGEnC,SAAS,IAAIoC,gBAHf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getProductById } from '../../../redux/productsRedux';\nimport { addCartProduct } from '../../../redux/cartRedux';\n\nimport { ProductCount } from '../../features/ProductCount/ProductCount';\nimport { PhotoGallery } from '../../features/PhotoGallery/PhotoGallery';\nimport { formInputNumberParser } from '../../../utils';\n\nimport styles from './Product.module.scss';\n\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass Component extends React.Component {\n\n  state = {\n    orderData: {\n      finalPrice: 0,\n      quantity: 0,\n    },\n  }\n\n  static propTypes = {\n    product: PropTypes.object,\n    addCartProduct: PropTypes.func,\n  }\n\n  handleChange = (event) => {\n    const { orderData } = this.state;\n    const { value, id } = event.target;\n    const { product } = this.props;\n\n    const parsedValue = formInputNumberParser(value);\n    const totalPrice = parsedValue * product.price;\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        [id]: parsedValue,\n        totalPrice: totalPrice,\n      },\n    });\n  }\n\n  decreaseProductQuantity = () => {\n    const { orderData } = this.state;\n    const { product } = this.props;\n\n    if (orderData.quantity === 0) {\n      return;\n    }\n\n    const newQuantity = orderData.quantity - 1;\n\n    const totalPrice = newQuantity * product.price;\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        quantity: newQuantity,\n        totalPrice: totalPrice,\n      },\n    });\n  }\n\n  increaseProductQuantity = () => {\n    const { orderData } = this.state;\n    const { product } = this.props;\n\n    if (orderData.quantity === 999) {\n      return;\n    }\n\n    const newQuantity = orderData.quantity + 1;\n    const totalPrice = newQuantity * product.price;\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        quantity: newQuantity,\n        totalPrice: totalPrice,\n      },\n    });\n  }\n\n  addToCart = () => {\n    const { orderData } = this.state;\n    const { product, addCartProduct } = this.props;\n\n    const cartProduct = {};\n\n    if(orderData.price !== 0) {\n      cartProduct.photo = product.photo[0];\n      cartProduct.name = product.name;\n      cartProduct.quantity = orderData.quantity;\n      cartProduct.price = orderData.totalPrice;\n      cartProduct.description = '';\n\n      addCartProduct(cartProduct);\n    }\n    else {\n      alert('Please pick at least one product');\n    }\n  }\n\n  render() {\n    const {product} = this.props;\n    const { orderData } = this.state;\n\n    return(\n      <Paper>\n        <Card>\n          <CardContent>\n            <Typography>\n              {product.name}\n            </Typography>\n            <Typography>\n              {product.description}\n            </Typography>\n            <PhotoGallery images={product.photo} />\n            <ProductCount handleChange={this.handleChange} increase={this.increaseProductQuantity} decrease={this.decreaseProductQuantity} quantity={orderData.quantity} />\n            <Typography>\n              Price: {orderData.totalPrice} $\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button onClick={this.addToCart}>Add to cart</Button>\n          </CardActions>\n        </Card>\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  product: getProductById(state, props.match.params.id),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addCartProduct: cartProduct => dispatch(addCartProduct(cartProduct)),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  //Component as Product,\n  Container as Product,\n  Component as ProductComponent,\n};\n"]},"metadata":{},"sourceType":"module"}