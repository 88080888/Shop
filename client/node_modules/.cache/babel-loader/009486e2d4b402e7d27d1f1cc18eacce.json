{"ast":null,"code":"import _defineProperty from \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/src/components/views/Product/Product.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqid from 'uniqid';\nimport { connect } from 'react-redux';\nimport { getProductById, getProductByIdRequest } from '../../../redux/productsRedux';\nimport { addCartProductRequest } from '../../../redux/cartRedux';\nimport { ButtonBackHomepage } from '../../common/ButtonBackHomepage/ButtonBackHomepage';\nimport { ProductCount } from '../../features/ProductCount/ProductCount';\nimport { PhotoGallery } from '../../features/PhotoGallery/PhotoGallery';\nimport { formInputNumberParser } from '../../../utils';\nimport styles from './Product.module.scss';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AddIcon from '@material-ui/icons/Add';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderData: {\n        totalPrice: 0,\n        quantity: 0\n      }\n    };\n\n    this.handleChange = event => {\n      const orderData = this.state.orderData;\n      const _event$target = event.target,\n            value = _event$target.value,\n            id = _event$target.id;\n      const product = this.props.product;\n      const parsedValue = formInputNumberParser(value);\n      const totalPrice = parsedValue * product.price;\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          [id]: parsedValue,\n          totalPrice: totalPrice\n        })\n      });\n    };\n\n    this.decreaseProductQuantity = () => {\n      const orderData = this.state.orderData;\n      const product = this.props.product;\n\n      if (orderData.quantity === 0) {\n        return;\n      }\n\n      const newQuantity = orderData.quantity - 1;\n      const totalPrice = newQuantity * product.price;\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          quantity: newQuantity,\n          totalPrice: totalPrice\n        })\n      });\n    };\n\n    this.increaseProductQuantity = () => {\n      const orderData = this.state.orderData;\n      const product = this.props.product;\n\n      if (orderData.quantity === 999) {\n        return;\n      }\n\n      const newQuantity = orderData.quantity + 1;\n      const totalPrice = newQuantity * product.price;\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          quantity: newQuantity,\n          totalPrice: totalPrice\n        })\n      });\n    };\n\n    this.addToCart = () => {\n      const orderData = this.state.orderData;\n      const _this$props = this.props,\n            product = _this$props.product,\n            addCartProductRequest = _this$props.addCartProductRequest;\n      const cartProduct = {};\n\n      if (orderData.totalprice !== 0) {\n        cartProduct.id = uniqid();\n        cartProduct.photo = product.photo[0];\n        cartProduct.name = product.name;\n        cartProduct.quantity = orderData.quantity;\n        cartProduct.price = orderData.totalPrice;\n        cartProduct.comment = '';\n        cartProduct.totalPrice = orderData.totalPrice;\n        cartProduct.productId = product._id;\n        addCartProductRequest(cartProduct);\n        alert('Product added to the cart');\n      } else {\n        alert('Please pick at least one product');\n      }\n    };\n  }\n\n  componentDidMount() {\n    const getProductByIdRequest = this.props.getProductByIdRequest;\n    getProductByIdRequest();\n  }\n\n  render() {\n    const product = this.props.product;\n    const orderData = this.state.orderData;\n    return React.createElement(Paper, {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      xs: 12,\n      spacing: 2,\n      className: styles.gridContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(PhotoGallery, {\n      images: product.photo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"column\",\n      spacing: 2,\n      className: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: styles.title,\n      gutterBottom: true,\n      variant: \"h3\",\n      component: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, product.name), React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"p\",\n      className: styles.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, product.description), React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"p\",\n      className: styles.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Price: \", orderData.finalPrice, \"$\"), React.createElement(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      className: styles.featuresContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      className: styles.productCounterContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(ProductCount, {\n      handleChange: this.handleQuantityChange,\n      increase: this.increaseProductQuantity,\n      decrease: this.decreaseProductQuantity,\n      quantity: orderData.quantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      className: styles.infoAboutShip,\n      direction: \"column\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      className: styles.shipInfoFree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(LocalShippingIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: styles.freeShipText,\n      variant: \"h6\",\n      component: \"span\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"FREE SHIPPING FROM 200$\")), React.createElement(Grid, {\n      item: true,\n      className: styles.shipInfoTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(QueryBuilderIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: styles.timeShipText,\n      variant: \"h6\",\n      component: \"span\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"DELIVERY TIME: 4 WORKING DAYS\"))), React.createElement(Grid, {\n      item: true,\n      container: true,\n      className: styles.buttonsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      className: styles.buttonHomepage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(ButtonBackHomepage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      className: styles.buttonCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      onClick: this.addToCart,\n      className: styles.button,\n      startIcon: React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"ADD TO CART\")))))))));\n  }\n\n}\n\nComponent.propTypes = {\n  product: PropTypes.object,\n  addCartProductRequest: PropTypes.func,\n  getProductByIdRequest: PropTypes.func\n};\n\nconst mapStateToProps = (state, props) => ({\n  product: getProductById(state, props.match.params.id)\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  addCartProductRequest: cartProduct => dispatch(addCartProductRequest(cartProduct)),\n  getProductByIdRequest: () => dispatch(getProductByIdRequest(props.match.params.id))\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport { Container as Product, Component as ProductComponent };","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/src/components/views/Product/Product.js"],"names":["React","PropTypes","uniqid","connect","getProductById","getProductByIdRequest","addCartProductRequest","ButtonBackHomepage","ProductCount","PhotoGallery","formInputNumberParser","styles","Paper","Typography","Button","Grid","AddIcon","LocalShippingIcon","QueryBuilderIcon","Component","state","orderData","totalPrice","quantity","handleChange","event","target","value","id","product","props","parsedValue","price","setState","decreaseProductQuantity","newQuantity","increaseProductQuantity","addToCart","cartProduct","totalprice","photo","name","comment","productId","_id","alert","componentDidMount","render","root","gridContainer","text","title","description","finalPrice","featuresContainer","productCounterContainer","handleQuantityChange","infoAboutShip","shipInfoFree","freeShipText","shipInfoTime","timeShipText","buttonsContainer","buttonHomepage","buttonCart","button","propTypes","object","func","mapStateToProps","match","params","mapDispatchToProps","dispatch","Container","Product","ProductComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqid from 'uniqid';\n\nimport { connect } from 'react-redux';\nimport { getProductById, getProductByIdRequest } from '../../../redux/productsRedux';\nimport { addCartProductRequest } from '../../../redux/cartRedux';\n\nimport { ButtonBackHomepage } from '../../common/ButtonBackHomepage/ButtonBackHomepage';\nimport { ProductCount } from '../../features/ProductCount/ProductCount';\nimport { PhotoGallery } from '../../features/PhotoGallery/PhotoGallery';\nimport { formInputNumberParser } from '../../../utils';\n\nimport styles from './Product.module.scss';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AddIcon from '@material-ui/icons/Add';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\n\nclass Component extends React.Component {\n\n  state = {\n    orderData: {\n      totalPrice: 0,\n      quantity: 0,\n    },\n  }\n\n  static propTypes = {\n    product: PropTypes.object,\n    addCartProductRequest: PropTypes.func,\n    getProductByIdRequest: PropTypes.func,\n  }\n\n  componentDidMount() {\n    const { getProductByIdRequest } = this.props;\n    getProductByIdRequest();\n  }  \n\n  handleChange = (event) => {\n    const { orderData } = this.state;\n    const { value, id } = event.target;\n    const { product } = this.props;\n\n    const parsedValue = formInputNumberParser(value);\n    const totalPrice = parsedValue * product.price;\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        [id]: parsedValue,\n        totalPrice: totalPrice,\n      },\n    });\n  }\n\n  decreaseProductQuantity = () => {\n    const { orderData } = this.state;\n    const { product } = this.props;\n\n    if (orderData.quantity === 0) {\n      return;\n    }\n\n    const newQuantity = orderData.quantity - 1;\n\n    const totalPrice = newQuantity * product.price;\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        quantity: newQuantity,\n        totalPrice: totalPrice,\n      },\n    });\n  }\n\n  increaseProductQuantity = () => {\n    const { orderData } = this.state;\n    const { product } = this.props;\n\n    if (orderData.quantity === 999) {\n      return;\n    }\n\n    const newQuantity = orderData.quantity + 1;\n    const totalPrice = newQuantity * product.price;\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        quantity: newQuantity,\n        totalPrice: totalPrice,\n      },\n    });\n  }\n\n  addToCart = () => {\n    const { orderData } = this.state;\n    const { product, addCartProductRequest } = this.props;\n\n    const cartProduct = {};\n\n\n    if(orderData.totalprice !== 0) {\n      cartProduct.id = uniqid();\n      cartProduct.photo = product.photo[0];\n      cartProduct.name = product.name;\n      cartProduct.quantity = orderData.quantity;\n      cartProduct.price = orderData.totalPrice;\n      cartProduct.comment = '';\n      cartProduct.totalPrice = orderData.totalPrice;\n      cartProduct.productId = product._id;\n\n      addCartProductRequest(cartProduct);\n      alert('Product added to the cart');\n    }\n    else {\n      alert('Please pick at least one product');\n    }\n  }\n\n  render() {\n    const {product} = this.props;\n    const { orderData } = this.state;\n\n    return(\n      <Paper className={styles.root}>\n        <Grid container xs={12} spacing={2} className={styles.gridContainer}>\n\n          <Grid item xs={12} sm={4}>\n                <PhotoGallery\n                  images={product.photo}\n                />\n          </Grid>\n\n          <Grid item xs={12} sm={8} container>\n            <Grid item item xs container direction=\"column\" spacing={2} className={styles.text}>\n              <Typography               \n                className={styles.title}\n                gutterBottom\n                variant='h3'\n                component='h1'\n              >\n                {product.name}            \n              </Typography>\n              <Typography\n              variant='h4'\n              component='p'\n              className={styles.description}\n              >\n              {product.description}\n              </Typography>\n              <Typography\n                variant='h5'\n                component='p'\n                className={styles.totalPrice}\n              >\n                Price: {orderData.finalPrice}$\n              </Typography>\n\n            <Grid item xs container className={styles.featuresContainer}>\n\n              <Grid item className={styles.productCounterContainer}>\n                <ProductCount\n                  handleChange={this.handleQuantityChange}\n                  increase={this.increaseProductQuantity}\n                  decrease={this.decreaseProductQuantity}\n                  quantity={orderData.quantity}\n                />\n              </Grid>\n\n              <Grid item className={styles.infoAboutShip}  direction='column' justify='center'>\n                <Grid item className={styles.shipInfoFree}>\n                  <LocalShippingIcon />\n                  <Typography               \n                  className={styles.freeShipText}\n                  variant='h6'\n                  component='span'\n                  gutterBottom\n                  >\n                    FREE SHIPPING FROM 200$         \n                  </Typography>\n                </Grid>\n\n                <Grid item className={styles.shipInfoTime}>\n                  <QueryBuilderIcon />\n                  <Typography               \n                  className={styles.timeShipText}\n                  variant='h6'\n                  component='span'\n                  gutterBottom\n                  >\n                    DELIVERY TIME: 4 WORKING DAYS          \n                  </Typography>\n                </Grid>\n              </Grid>\n\n            <Grid item container className={styles.buttonsContainer}>\n              <Grid item xs={12} md={6} className={styles.buttonHomepage}>\n                <ButtonBackHomepage />\n              </Grid>\n\n              <Grid item xs={12} md={6} className={styles.buttonCart}>\n                <Button\n                  variant='contained'\n                  size='large'\n                  onClick={this.addToCart}\n                  className={styles.button}\n                  startIcon={<AddIcon />}\n                >\n                  <span>ADD TO CART</span>\n                </Button>\n              </Grid>\n            </Grid>\n            </Grid>\n            </Grid>  \n          </Grid>\n\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  product: getProductById(state, props.match.params.id),\n});\n\nconst mapDispatchToProps = (dispatch,props) => ({\n  addCartProductRequest: cartProduct => dispatch(addCartProductRequest(cartProduct)),\n  getProductByIdRequest: () => dispatch(getProductByIdRequest(props.match.params.id)),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Container as Product,\n  Component as ProductComponent,\n};\n"]},"metadata":{},"sourceType":"module"}