{"ast":null,"code":"var _jsxFileName = \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/src/components/features/CartProduct/CartProduct.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ProductCount } from '../ProductCount/ProductCount';\nimport { connect } from 'react-redux';\nimport { removeCartProduct } from '../../../redux/cartRedux.js';\nimport styles from './CartProduct.module.scss';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.removeFromCart = () => {\n      const _this$props = this.props,\n            id = _this$props.id,\n            removeCartProduct = _this$props.removeCartProduct;\n      console.log('id:', id);\n      removeCartProduct(id);\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          id = _this$props2.id,\n          name = _this$props2.name,\n          photo = _this$props2.photo,\n          quantity = _this$props2.quantity,\n          price = _this$props2.price,\n          comment = _this$props2.comment;\n    return React.createElement(Grid, {\n      container: true,\n      className: styles.root,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ButtonBase, {\n      className: styles.imageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: styles.image,\n      src: photo,\n      alt: \"product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: true,\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"column\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: styles.productName,\n      gutterBottom: true,\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, name)), React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ProductCount, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"comment\",\n      label: \"Comment\",\n      variant: \"outlined\",\n      multiline: true,\n      rowsMax: 4,\n      inputProps: {\n        maxLength: 100\n      },\n      className: styles.commentField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"column\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: styles.price,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"$\", price), React.createElement(Grid, {\n      item: true,\n      className: styles.iconContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.removeFromCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      className: styles.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))))));\n  }\n\n} // const mapStateToProps = state => ({\n//   someProp: reduxSelector(state),\n// });\n\n\nComponent.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  photo: PropTypes.node,\n  quantity: PropTypes.number,\n  price: PropTypes.number,\n  comment: PropTypes.string,\n  removeCartProduct: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  removeCartProduct: id => dispatch(removeCartProduct(id))\n});\n\nconst Container = connect(null, mapDispatchToProps)(Component);\nexport { //Component as CartProduct,\nContainer as CartProduct, Component as CartProductComponent };","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/src/components/features/CartProduct/CartProduct.js"],"names":["React","PropTypes","ProductCount","connect","removeCartProduct","styles","Grid","Button","ButtonBase","Typography","TextField","DeleteIcon","Component","removeFromCart","props","id","console","log","render","name","photo","quantity","price","comment","root","imageContainer","image","productName","maxLength","commentField","iconContainer","icon","propTypes","string","node","number","func","mapDispatchToProps","dispatch","Container","CartProduct","CartProductComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ProductCount } from '../ProductCount/ProductCount';\nimport { connect } from 'react-redux';\nimport { removeCartProduct } from '../../../redux/cartRedux.js';\n\nimport styles from './CartProduct.module.scss';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nclass Component extends React.Component {\n  static propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    photo: PropTypes.node,\n    quantity: PropTypes.number,\n    price: PropTypes.number,\n    comment: PropTypes.string,\n    removeCartProduct: PropTypes.func,\n  }\n\n  removeFromCart = () => {\n    const { id, removeCartProduct } = this.props;\n\n    console.log('id:',id);\n\n    removeCartProduct(id);\n  }\t  \n\n  render() {\n    const { id, name, photo, quantity, price, comment } = this.props;\n\n    return(\n      <Grid container className={styles.root} spacing={2}>\n\n        <Grid item>\n          <ButtonBase className={styles.imageContainer}>\n            <img className={styles.image} src={photo} alt='product' />\n          </ButtonBase>\n        </Grid>\n\n        <Grid item xs={12} sm container>\n\n          <Grid  item xs container direction='column' spacing={2}>\n            <Grid item xs>\n              <Typography className={styles.productName} gutterBottom variant='subtitle1'>\n                {name}\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <ProductCount />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                id='comment'\n                label='Comment'\n                variant='outlined'\n                multiline\n                rowsMax={4}\n                inputProps={{\n                  maxLength: 100,\n                }}\n                className={styles.commentField}\n              />\n            </Grid>\n          </Grid>\n\n          <Grid  item xs container direction='column' spacing={2}>\n            <Grid className={styles.price} item>\n              ${price}\n            </Grid>\n            <Grid item className={styles.iconContainer}>\n              <Button onClick={this.removeFromCart}>\n                <DeleteIcon className={styles.icon} />\n              </Button>\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n    );\n  }\n}\n\n\n// const mapStateToProps = state => ({\n//   someProp: reduxSelector(state),\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  removeCartProduct: id => dispatch(removeCartProduct(id)),\n});\n\nconst Container = connect(null, mapDispatchToProps)(Component);\n\nexport {\n  //Component as CartProduct,\n  Container as CartProduct,\n  Component as CartProductComponent,\n};\n"]},"metadata":{},"sourceType":"module"}