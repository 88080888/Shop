{"ast":null,"code":"import _defineProperty from \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Axios from 'axios';\nimport { API_URL } from '../config';\n/* selectors */\n\nexport const getAllProducts = ({\n  products\n}) => products.data;\nexport const getProductById = ({\n  products\n}, productId) => {\n  const productData = products.data.filter(product => product._id === productId);\n  return productData[0];\n};\n/* action name creator */\n\nconst reducerName = 'products';\n\nconst createActionName = name => \"app/\".concat(reducerName, \"/\").concat(name);\n/* action types */\n\n\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n/* action creators */\n\nexport const fetchStarted = payload => ({\n  payload,\n  type: FETCH_START\n});\nexport const fetchSuccess = payload => ({\n  payload,\n  type: FETCH_SUCCESS\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\n/* thunk creators */\n\nexport const getAllProductsRequest = () => {\n  return async dispatch => {\n    dispatch(fetchStarted());\n\n    try {\n      let res = await Axios.get(\"\".concat(API_URL, \"/product\"));\n      dispatch(fetchSuccess(res.data));\n    } catch (err) {\n      dispatch(fetchError(err.message || true));\n    }\n  };\n};\nexport const getProductByIdRequest = id => {\n  return async dispatch => {\n    dispatch(fetchStarted());\n\n    try {\n      let res = await Axios.get(\"\".concat(API_URL, \"/product/\").concat(id));\n      dispatch(fetchSuccess(res.data));\n    } catch (err) {\n      dispatch(fetchError(err.message || true));\n    }\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: true,\n            error: false\n          }\n        });\n      }\n\n    case FETCH_SUCCESS:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: false\n          },\n          data: action.payload\n        });\n      }\n\n    case FETCH_ERROR:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        });\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/src/redux/productsRedux.js"],"names":["Axios","API_URL","getAllProducts","products","data","getProductById","productId","productData","filter","product","_id","reducerName","createActionName","name","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","fetchStarted","payload","type","fetchSuccess","fetchError","getAllProductsRequest","dispatch","res","get","err","message","getProductByIdRequest","id","reducer","statePart","action","loading","active","error"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { API_URL } from '../config';\n\n/* selectors */\nexport const getAllProducts = ({products}) => products.data;\nexport const getProductById = ({products}, productId) => {\n  const productData = products.data.filter(product => product._id === productId);\n  return productData[0];\n};\n\n/* action name creator */\nconst reducerName = 'products';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\n\n/* thunk creators */\nexport const getAllProductsRequest = () => {\n  return async dispatch => {\n\n    dispatch(fetchStarted());\n\n    try {\n      let res = await Axios.get(`${API_URL}/product`);\n      dispatch(fetchSuccess(res.data));\n    }\n    catch(err) {\n      dispatch(fetchError(err.message || true));\n    }\n  };\n};\n\nexport const getProductByIdRequest = (id) => {\n  return async dispatch => {\n\n    dispatch(fetchStarted());\n\n    try {\n      let res = await Axios.get(`${API_URL}/product/${id}`);\n      dispatch(fetchSuccess(res.data));\n    }\n    catch(err) {\n      dispatch(fetchError(err.message || true));\n    }\n  };\n};\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}