{"ast":null,"code":"import _defineProperty from \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* selectors */\nexport const getAllCartProducts = ({\n  cart\n}) => cart.data;\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => \"app/\".concat(reducerName, \"/\").concat(name);\n/* action types */\n\n\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_CART_PRODUCT = createActionName('ADD_CART_PRODUCT');\nconst REMOVE_CART_PRODUCT = createActionName('REMOVE_CART_PRODUCT');\nconst UPDATE_CART_PRODUCT = createActionName('UPDATE_CART_PRODUCT');\n/* action creators */\n\nexport const fetchStarted = payload => ({\n  payload,\n  type: FETCH_START\n});\nexport const fetchSuccess = payload => ({\n  payload,\n  type: FETCH_SUCCESS\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\nexport const addCartProduct = payload => ({\n  payload,\n  type: ADD_CART_PRODUCT\n});\nexport const removeCartProduct = payload => ({\n  payload,\n  type: REMOVE_CART_PRODUCT\n});\nexport const updateCartProduct = payload => ({\n  payload,\n  type: UPDATE_CART_PRODUCT\n});\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: true,\n            error: false\n          }\n        });\n      }\n\n    case FETCH_SUCCESS:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: false\n          },\n          data: action.payload\n        });\n      }\n\n    case FETCH_ERROR:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        });\n      }\n\n    case ADD_CART_PRODUCT:\n      {\n        return _objectSpread({}, statePart, {\n          data: [...statePart.data, action.payload]\n        });\n      }\n\n    case REMOVE_CART_PRODUCT:\n      {\n        return _objectSpread({}, statePart, {\n          data: [...statePart.data.filter(cartProduct => cartProduct.id !== action.payload)]\n        });\n      }\n\n    case UPDATE_CART_PRODUCT:\n      {\n        return _objectSpread({}, statePart, {\n          data: [...statePart.data.map(cartProduct => cartProduct.id === action.payload.id ? _objectSpread({}, cartProduct, {\n            'totalPrice': action.payload.finalPrice ? action.payload.finalPrice : cartProduct.finalPrice,\n            [action.payload.key]: action.payload.value\n          }) : cartProduct)]\n        });\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/src/redux/cartRedux.js"],"names":["getAllCartProducts","cart","data","reducerName","createActionName","name","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","ADD_CART_PRODUCT","REMOVE_CART_PRODUCT","UPDATE_CART_PRODUCT","fetchStarted","payload","type","fetchSuccess","fetchError","addCartProduct","removeCartProduct","updateCartProduct","reducer","statePart","action","loading","active","error","filter","cartProduct","id","map","finalPrice","key","value"],"mappings":"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","sourcesContent":["/* selectors */\nexport const getAllCartProducts = ({cart}) => cart.data;\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_CART_PRODUCT = createActionName('ADD_CART_PRODUCT');\nconst REMOVE_CART_PRODUCT = createActionName('REMOVE_CART_PRODUCT');\nconst UPDATE_CART_PRODUCT = createActionName('UPDATE_CART_PRODUCT');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const addCartProduct = payload => ({ payload, type: ADD_CART_PRODUCT});\nexport const removeCartProduct = payload => ({ payload, type: REMOVE_CART_PRODUCT });\nexport const updateCartProduct = payload => ({ payload, type: UPDATE_CART_PRODUCT });\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    case ADD_CART_PRODUCT: {\n      return {\n        ...statePart,\n        data: [\n          ...statePart.data,\n          action.payload,\n        ],\n      };\n    }\n    case REMOVE_CART_PRODUCT: {\n      return {\n        ...statePart,\n        data: [\n          ...statePart.data.filter(cartProduct => cartProduct.id !== action.payload),\n        ],\n      };\n    }\n    case UPDATE_CART_PRODUCT: {\n      return {\n        ...statePart,\n        data: [\n          ...statePart.data.map(cartProduct =>\n            cartProduct.id === action.payload.id\n              ? {\n                ...cartProduct,\n                'totalPrice': action.payload.finalPrice? action.payload.finalPrice : cartProduct.finalPrice,\n                [action.payload.key]: action.payload.value,\n              }\n              : cartProduct\n          ),\n        ],\n      };\n    }\n    default:\n      return statePart;\n  }\n};"]},"metadata":{},"sourceType":"module"}