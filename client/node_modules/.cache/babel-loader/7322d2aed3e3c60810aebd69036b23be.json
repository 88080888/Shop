{"ast":null,"code":"import _defineProperty from \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* selectors */\nexport const getAllCartProducts = ({\n  cart\n}) => cart.data;\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => \"app/\".concat(reducerName, \"/\").concat(name);\n/* action types */\n\n\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_CART_PRODUCT = createActionName('ADD_CART_PRODUCT');\nconst REMOVE_CART_PRODUCT = createActionName('REMOVE_CART_PRODUCT');\nconst UPDATE_CART_PRODUCT = createActionName('UPDATE_CART_PRODUCT');\nconst CLEAR_CART = createActionName('CLEAR_CART');\n/* action creators */\n\nexport const fetchStarted = payload => ({\n  payload,\n  type: FETCH_START\n});\nexport const fetchSuccess = payload => ({\n  payload,\n  type: FETCH_SUCCESS\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\nexport const addCartProduct = payload => ({\n  payload,\n  type: ADD_CART_PRODUCT\n});\nexport const removeCartProduct = payload => ({\n  payload,\n  type: REMOVE_CART_PRODUCT\n});\nexport const updateCartProduct = payload => ({\n  payload,\n  type: UPDATE_CART_PRODUCT\n});\nexport const clearCart = payload => ({\n  payload,\n  type: CLEAR_CART\n});\n/* thunk creators */\n\nexport const addCartProductRequest = cartProduct => {\n  return async (dispatch, getState) => {\n    await dispatch(addCartProduct(cartProduct));\n\n    const _ref = await getState(),\n          cart = _ref.cart;\n\n    const updatedCart = cart.data;\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n  };\n};\nexport const getCartProductsRequest = () => {\n  return async dispatch => {\n    const cartProducts = JSON.parse(localStorage.getItem('cart'));\n    if (cartProducts === null) return;else await dispatch(fetchSuccess(cartProducts));\n  };\n};\nexport const removeCartProductRequest = id => {\n  return async (dispatch, getState) => {\n    await dispatch(removeCartProduct(id));\n\n    const _ref2 = await getState(),\n          cart = _ref2.cart;\n\n    const updatedCart = cart.data;\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n  };\n};\nexport const updateCartProductRequest = cartProduct => {\n  return async (dispatch, getState) => {\n    await dispatch(updateCartProduct(cartProduct));\n\n    const _ref3 = await getState(),\n          cart = _ref3.cart;\n\n    const updatedCart = cart.data;\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n  };\n};\nexport const clearCartRequest = () => {\n  return async dispatch => {\n    await dispatch(clearCart());\n    localStorage.removeItem('cart');\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: true,\n            error: false\n          }\n        });\n      }\n\n    case FETCH_SUCCESS:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: false\n          },\n          data: action.payload\n        });\n      }\n\n    case FETCH_ERROR:\n      {\n        return _objectSpread({}, statePart, {\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        });\n      }\n\n    case ADD_CART_PRODUCT:\n      {\n        return _objectSpread({}, statePart, {\n          data: [...statePart.data, action.payload]\n        });\n      }\n\n    case REMOVE_CART_PRODUCT:\n      {\n        return _objectSpread({}, statePart, {\n          data: [...statePart.data.filter(cartProduct => cartProduct.id !== action.payload)]\n        });\n      }\n\n    case UPDATE_CART_PRODUCT:\n      {\n        return _objectSpread({}, statePart, {\n          data: [...statePart.data.map(cartProduct => cartProduct.id === action.payload.id ? _objectSpread({}, cartProduct, {\n            'totalPrice': action.payload.totalPrice ? action.payload.totalPrice : cartProduct.totalPrice,\n            [action.payload.key]: action.payload.value\n          }) : cartProduct)]\n        });\n      }\n\n    case CLEAR_CART:\n      {\n        return _objectSpread({}, statePart, {\n          data: []\n        });\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/src/redux/cartRedux.js"],"names":["getAllCartProducts","cart","data","reducerName","createActionName","name","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","ADD_CART_PRODUCT","REMOVE_CART_PRODUCT","UPDATE_CART_PRODUCT","CLEAR_CART","fetchStarted","payload","type","fetchSuccess","fetchError","addCartProduct","removeCartProduct","updateCartProduct","clearCart","addCartProductRequest","cartProduct","dispatch","getState","updatedCart","localStorage","setItem","JSON","stringify","getCartProductsRequest","cartProducts","parse","getItem","removeCartProductRequest","id","updateCartProductRequest","clearCartRequest","removeItem","reducer","statePart","action","loading","active","error","filter","map","totalPrice","key","value"],"mappings":"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","sourcesContent":["/* selectors */\nexport const getAllCartProducts = ({cart}) => cart.data;\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_CART_PRODUCT = createActionName('ADD_CART_PRODUCT');\nconst REMOVE_CART_PRODUCT = createActionName('REMOVE_CART_PRODUCT');\nconst UPDATE_CART_PRODUCT = createActionName('UPDATE_CART_PRODUCT');\nconst CLEAR_CART = createActionName('CLEAR_CART');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const addCartProduct = payload => ({ payload, type: ADD_CART_PRODUCT});\nexport const removeCartProduct = payload => ({ payload, type: REMOVE_CART_PRODUCT });\nexport const updateCartProduct = payload => ({ payload, type: UPDATE_CART_PRODUCT });\nexport const clearCart = payload => ({ payload, type: CLEAR_CART });\n\n/* thunk creators */\nexport const addCartProductRequest = (cartProduct) => {\n  return async (dispatch, getState) => {\n\n    await dispatch(addCartProduct(cartProduct));\n\n    const { cart }  = await getState();\n\n    const updatedCart  = cart.data;\n\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n  };\n};\n\nexport const getCartProductsRequest = () => {\n  return async dispatch => {\n    const cartProducts = JSON.parse(localStorage.getItem('cart'));\n\n    if (cartProducts === null) return;\n    else await dispatch(fetchSuccess(cartProducts));\n  };\n};\n\nexport const removeCartProductRequest = (id) => {\n  return async (dispatch, getState) => {\n\n    await dispatch(removeCartProduct(id));\n\n    const { cart }  = await getState();\n\n    const updatedCart  = cart.data;\n\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n  };\n};\n\nexport const updateCartProductRequest = (cartProduct) => {\n  return async (dispatch, getState) => {\n\n    await dispatch(updateCartProduct(cartProduct));\n\n    const { cart }  = await getState();\n\n    const updatedCart  = cart.data;\n\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n  };\n};\n\nexport const clearCartRequest = () => {\n  return async (dispatch) => {\n\n    await dispatch(clearCart());\n\n    localStorage.removeItem('cart');\n  };\n};\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    case ADD_CART_PRODUCT: {\n      return {\n        ...statePart,\n        data: [\n          ...statePart.data,\n          action.payload,\n        ],\n      };\n    }\n    case REMOVE_CART_PRODUCT: {\n      return {\n        ...statePart,\n        data: [\n          ...statePart.data.filter(cartProduct => cartProduct.id !== action.payload),\n        ],\n      };\n    }\n    case UPDATE_CART_PRODUCT: {\n      return {\n        ...statePart,\n        data: [\n          ...statePart.data.map(cartProduct =>\n            cartProduct.id === action.payload.id\n              ? {\n                ...cartProduct,\n                'totalPrice': action.payload.totalPrice? action.payload.totalPrice : cartProduct.totalPrice,\n                [action.payload.key]: action.payload.value,\n              }\n              : cartProduct\n          ),\n        ],\n      };\n    }\n    case CLEAR_CART: {\n      return {\n        ...statePart,\n        data: [],\n      };\n    }\n    default:\n      return statePart;\n  }\n};"]},"metadata":{},"sourceType":"module"}