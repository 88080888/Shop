{"ast":null,"code":"var _jsxFileName = \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/src/components/views/Cart/Cart.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllCartProducts } from '../../../redux/cartRedux';\nimport { CartProductList } from '../../features/CartProductList/CartProductList';\nimport styles from './Cart.module.scss';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nclass Component extends React.Component {\n  wholeCost() {\n    const cartProducts = this.props.cartProducts;\n    let totalCost = 0;\n    cartProducts.map(cartProduct => totalCost += cartProduct.finalPrice);\n    return totalCost;\n  }\n\n  render() {\n    const cartProducts = this.props.cartProducts;\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: styles.title,\n      gutterBottom: true,\n      variant: \"h3\",\n      component: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Cart\"), React.createElement(CartProductList, {\n      cartProducts: cartProducts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nComponent.propTypes = {\n  cartProducts: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  cartProducts: getAllCartProducts(state)\n}); // const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n\nconst Container = connect(mapStateToProps)(Component);\nexport { //Component as Cart,\nContainer as Cart, Component as CartComponent };","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/src/components/views/Cart/Cart.js"],"names":["React","PropTypes","connect","getAllCartProducts","CartProductList","styles","Paper","Typography","Component","wholeCost","cartProducts","props","totalCost","map","cartProduct","finalPrice","render","title","propTypes","array","mapStateToProps","state","Container","Cart","CartComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AAEA,SAASC,eAAT,QAAgC,gDAAhC;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,SAAN,SAAwBR,KAAK,CAACQ,SAA9B,CAAwC;AAKtCC,EAAAA,SAAS,GAAG;AAAA,UACFC,YADE,GACe,KAAKC,KADpB,CACFD,YADE;AAGV,QAAIE,SAAS,GAAG,CAAhB;AAEAF,IAAAA,YAAY,CAACG,GAAb,CAAiBC,WAAW,IAAIF,SAAS,IAAIE,WAAW,CAACC,UAAzD;AAEA,WAAOH,SAAP;AACD;;AAEDI,EAAAA,MAAM,GAAG;AAAA,UACCN,YADD,GACkB,KAAKC,KADvB,CACCD,YADD;AAIP,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEL,MAAM,CAACY,KAA9B;AAAqC,MAAA,YAAY,MAAjD;AAAkD,MAAA,OAAO,EAAC,IAA1D;AAA+D,MAAA,SAAS,EAAC,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,eAAD;AAAiB,MAAA,YAAY,EAAEP,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AA3BqC;;AAAlCF,S,CACGU,S,GAAY;AACjBR,EAAAA,YAAY,EAAET,SAAS,CAACkB;AADP,C;;AA6BrB,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,YAAY,EAAEP,kBAAkB,CAACkB,KAAD;AADA,CAAL,CAA7B,C,CAIA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGpB,OAAO,CAACkB,eAAD,CAAP,CAAyBZ,SAAzB,CAAlB;AAEA,SACE;AACAc,SAAS,IAAIC,IAFf,EAGEf,SAAS,IAAIgB,aAHf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getAllCartProducts } from '../../../redux/cartRedux';\n\nimport { CartProductList } from '../../features/CartProductList/CartProductList';\n\nimport styles from './Cart.module.scss';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nclass Component extends React.Component {\n  static propTypes = {\n    cartProducts: PropTypes.array,\n  }\n\n  wholeCost() {\n    const { cartProducts } = this.props;\n\n    let totalCost = 0;\n\n    cartProducts.map(cartProduct => totalCost += cartProduct.finalPrice);\n\n    return totalCost;\n  }\n\n  render() {\n    const { cartProducts } = this.props;\n\n\n    return(\n      <Paper>\n        <Typography className={styles.title} gutterBottom variant=\"h3\" component=\"h1\">\n          Cart\n        </Typography>\n        <CartProductList cartProducts={cartProducts} />\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: getAllCartProducts(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  //Component as Cart,\n  Container as Cart,\n  Component as CartComponent,\n};\n"]},"metadata":{},"sourceType":"module"}