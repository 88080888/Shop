{"ast":null,"code":"import _defineProperty from \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/src/components/views/OrderSummary/OrderSummary.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { OrderSummaryList } from '../../features/OrderSummaryList/OrderSummaryList';\nimport { OrderForm } from '../../features/OrderForm/OrderForm';\nimport { connect } from 'react-redux';\nimport { getAllCartProducts, clearCart } from '../../../redux/cartRedux.js';\nimport { addOrderRequest } from '../../../redux/ordersRedux';\nimport styles from './OrderSummary.module.scss';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderData: {\n        name: '',\n        surname: '',\n        email: '',\n        phone: '',\n        message: '',\n        ordered: '',\n        totalCost: '',\n        orderDetails: this.props.cartProducts\n      }\n    };\n\n    this.handleChange = event => {\n      const orderData = this.state.orderData;\n      const _event$target = event.target,\n            value = _event$target.value,\n            id = _event$target.id,\n            name = _event$target.name;\n\n      if (id) {\n        this.set;\n      }\n\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          [id]: value\n        })\n      });\n    };\n\n    this.setOrderParams = () => {\n      const orderData = this.state.orderData;\n      const date = new Date();\n      const totalCost = this.totalCost();\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          ordered: date,\n          totalCost: totalCost\n        })\n      });\n    };\n\n    this.submitForm = event => {\n      const orderData = this.state.orderData;\n      const addOrderRequest = this.props.addOrderRequest;\n      event.preventDefault();\n      let error = null;\n      if (!orderData.name || !orderData.surname || !orderData.email || !orderData.phone) error = 'All form fields should be filled';else if (orderData.name.length > 15 || orderData.surname.length > 20) error = 'Name or surname is too long. Name max 15 characters, surname max 20';\n\n      if (!error) {\n        addOrderRequest(orderData);\n        alert('Order submitted successfully');\n        this.clearCart();\n      } else {\n        alert(error);\n      }\n    };\n  }\n\n  totalCost() {\n    const cartProducts = this.props.cartProducts;\n    let totalCost = 0;\n    cartProducts.map(cartProduct => totalCost += cartProduct.totalPrice);\n    return totalCost;\n  }\n\n  clearCart() {\n    const clearCartProducts = this.props.clearCartProducts;\n    this.setState({\n      orderData: {\n        name: '',\n        surname: '',\n        email: '',\n        phone: '',\n        ordered: '',\n        totalCost: ''\n      }\n    });\n    clearCartProducts();\n  }\n\n  render() {\n    const cartProducts = this.props.cartProducts;\n    const orderData = this.state.orderData;\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: styles.title,\n      gutterBottom: true,\n      variant: \"h3\",\n      component: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"ORDER SUMMARY\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.orderList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(OrderSummaryList, {\n      cartProducts: cartProducts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.totalCostContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: styles.title,\n      gutterBottom: true,\n      variant: \"h4\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Total cost:\", this.totalCost(), \"$\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.contactFormHeaderContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Contact form\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      className: styles.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(OrderForm, {\n      orderData: orderData,\n      handleChange: this.handleChange,\n      submitForm: this.submitForm,\n      setOrderDate: this.setOrderDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      container: true,\n      className: styles.buttonsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 5,\n      className: styles.buttonCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      color: \"primary\",\n      component: NavLink,\n      exact: true,\n      to: \"/cart\",\n      className: styles.button,\n      startIcon: React.createElement(ArrowBackIosIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"BACK TO CART\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 5,\n      className: styles.buttonSubmitOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      className: styles.button,\n      type: \"submit\",\n      onClick: this.setOrderParams,\n      form: \"orderSummaryForm\",\n      endIcon: React.createElement(SendIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"SUBMIT ORDER\"))));\n  }\n\n}\n\nComponent.propTypes = {\n  cartProducts: PropTypes.array,\n  addOrderRequest: PropTypes.func,\n  clearCartProducts: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  cartProducts: getAllCartProducts(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addOrderRequest: orderData => dispatch(addOrderRequest(orderData)),\n  clearCartProducts: () => dispatch(clearCart())\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport { //Component as OrderSummary,\nContainer as OrderSummary, Component as OrderSummaryComponent };","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/src/components/views/OrderSummary/OrderSummary.js"],"names":["React","PropTypes","NavLink","OrderSummaryList","OrderForm","connect","getAllCartProducts","clearCart","addOrderRequest","styles","Paper","Typography","Grid","Button","ArrowBackIosIcon","SendIcon","Component","state","orderData","name","surname","email","phone","message","ordered","totalCost","orderDetails","props","cartProducts","handleChange","event","target","value","id","set","setState","setOrderParams","date","Date","submitForm","preventDefault","error","length","alert","map","cartProduct","totalPrice","clearCartProducts","render","title","orderList","totalCostContainer","contactFormHeaderContainer","form","setOrderDate","buttonsContainer","buttonCart","button","buttonSubmitOrder","propTypes","array","func","mapStateToProps","mapDispatchToProps","dispatch","Container","OrderSummary","OrderSummaryComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { OrderSummaryList } from '../../features/OrderSummaryList/OrderSummaryList';\nimport { OrderForm } from '../../features/OrderForm/OrderForm';\n\nimport { connect } from 'react-redux';\nimport { getAllCartProducts, clearCart } from '../../../redux/cartRedux.js';\nimport { addOrderRequest } from '../../../redux/ordersRedux';\n\n\nimport styles from './OrderSummary.module.scss';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass Component extends React.Component {\n  state = {\n    orderData: {\n      name: '',\n      surname: '',\n      email: '',\n      phone: '',\n      message: '',\n      ordered: '',\n      totalCost: '',\n      orderDetails: this.props.cartProducts,\n    }, \n  }\n\n  static propTypes = {\n    cartProducts: PropTypes.array,\n    addOrderRequest: PropTypes.func,\n    clearCartProducts: PropTypes.func,\n  }\n\n  totalCost() {\n    const { cartProducts } = this.props;\n\n    let totalCost = 0;\n\n    cartProducts.map(cartProduct => totalCost += cartProduct.totalPrice);\n\n    return totalCost;\n  }\n\n  handleChange = (event) => {\n    const { orderData } = this.state;\n    const { value, id, name } = event.target;\n\n    if(id) {\n      this.set\n    }\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        [id]: value,\n      },\n    });\n  }\n\n  setOrderParams = () => {\n    const { orderData } = this.state;\n    const date = new Date();\n    const totalCost = this.totalCost();\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        ordered: date,\n        totalCost: totalCost,\n      },\n    });\n  }\n\n  clearCart() {\n    const { clearCartProducts } = this.props;\n    this.setState({\n      orderData: {\n        name: '',\n        surname: '',\n        email: '',\n        phone: '',\n        ordered: '',\n        totalCost: '',\n      },\n    });\n    clearCartProducts();\n  }  \n\n  submitForm = (event) => {\n    const { orderData } = this.state;\n    const { addOrderRequest } = this.props;\n\n    event.preventDefault();\n\n    let error = null;\n\n    if(!orderData.name || !orderData.surname || !orderData.email || !orderData.phone) error='All form fields should be filled';\n    else if(orderData.name.length > 15 || orderData.surname.length > 20) error ='Name or surname is too long. Name max 15 characters, surname max 20';\n\n    if(!error) {\n      addOrderRequest(orderData);\n      alert('Order submitted successfully');\n      this.clearCart();\n    } else {\n      alert(error);\n    }\n  }\n\n  render() {\n    const { cartProducts } = this.props;\n    const { orderData } = this.state;\n\n    return(\n      <Paper>\n        <Grid item xs={12}>\n          <Typography\n            className={styles.title}\n            gutterBottom\n            variant='h3'\n            component='h1'\n          >\n            ORDER SUMMARY\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} className={styles.orderList}>\n          <OrderSummaryList cartProducts={cartProducts} />\n        </Grid>\n        \n        <Grid item xs={12} className={styles.totalCostContainer}>\n          <Typography className={styles.title} gutterBottom variant=\"h4\" component=\"span\">\n            Total cost:{this.totalCost()}$\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} className={styles.contactFormHeaderContainer}>\n          <Typography\n            gutterBottom\n            variant='h5'\n            component='span'\n          >\n              Contact form\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} sm={8} md={6} className={styles.form}>\n          <OrderForm\n            orderData={orderData}\n            handleChange={this.handleChange}\n            submitForm={this.submitForm}\n            setOrderDate={this.setOrderDate}\n          />\n        </Grid>\n\n        <Grid item container className={styles.buttonsContainer}>\n\n          <Grid item xs={12} sm={5} className={styles.buttonCart}>\n            <Button\n              variant='contained'\n              size='large'\n              color='primary'\n              component={NavLink}\n              exact to={`/cart`}\n              className={styles.button}\n              startIcon={<ArrowBackIosIcon />}\n            >\n              BACK TO CART\n            </Button>\n          </Grid>\n\n          <Grid item xs={12} sm={5} className={styles.buttonSubmitOrder}>\n            <Button\n              variant='contained'\n              color='primary'\n              size='large'\n              className={styles.button}\n              type='submit'\n              onClick={this.setOrderParams}\n              form='orderSummaryForm'\n              endIcon={<SendIcon />}\n            >\n              SUBMIT ORDER\n            </Button>\n          </Grid>\n\n        </Grid>\n\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: getAllCartProducts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addOrderRequest: orderData => dispatch(addOrderRequest(orderData)),\n  clearCartProducts: () => dispatch(clearCart()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  //Component as OrderSummary,\n  Container as OrderSummary,\n  Component as OrderSummaryComponent,\n};\n"]},"metadata":{},"sourceType":"module"}