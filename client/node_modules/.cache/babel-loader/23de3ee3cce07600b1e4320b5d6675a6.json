{"ast":null,"code":"import{combineReducers,createStore,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{initialState}from'./initialState';import{reducer as postsReducer}from'./postsRedux';// define reducers\nvar reducers={posts:postsReducer};// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(function(item){if(typeof reducers[item]=='undefined'){reducers[item]=function(){var statePart=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;return statePart;};}});var combinedReducers=combineReducers(reducers);// create store\nexport var store=createStore(combinedReducers,initialState,composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/shop/src/redux/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","initialState","reducer","postsReducer","reducers","posts","Object","keys","forEach","item","statePart","combinedReducers","store"],"mappings":"AAAA,OAAQA,eAAR,CAAyBC,WAAzB,CAAsCC,eAAtC,KAA4D,OAA5D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CAEA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,OAAO,GAAIC,CAAAA,YAApB,KAAwC,cAAxC,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,CACfC,KAAK,CAAEF,YADQ,CAAjB,CAIA;AACAG,MAAM,CAACC,IAAP,CAAYN,YAAZ,EAA0BO,OAA1B,CAAkC,SAAAC,IAAI,CAAI,CACxC,GAAI,MAAOL,CAAAA,QAAQ,CAACK,IAAD,CAAf,EAAyB,WAA7B,CAA0C,CACxCL,QAAQ,CAACK,IAAD,CAAR,CAAiB,cAACC,CAAAA,SAAD,2DAAa,IAAb,OAAsBA,CAAAA,SAAtB,EAAjB,CACD,CACF,CAJD,EAMA,GAAMC,CAAAA,gBAAgB,CAAGf,eAAe,CAACQ,QAAD,CAAxC,CAEA;AACA,MAAO,IAAMQ,CAAAA,KAAK,CAAGf,WAAW,CAC9Bc,gBAD8B,CAE9BV,YAF8B,CAG9BD,mBAAmB,CACjBF,eAAe,CAACC,KAAD,CADE,CAHW,CAAzB","sourcesContent":["import {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState } from './initialState';\nimport { reducer as postsReducer } from './postsRedux';\n\n// define reducers\nconst reducers = {\n  posts: postsReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\nconst combinedReducers = combineReducers(reducers);\n\n// create store\nexport const store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n"]},"metadata":{},"sourceType":"module"}