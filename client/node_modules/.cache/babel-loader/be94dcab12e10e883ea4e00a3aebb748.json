{"ast":null,"code":"import _defineProperty from \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { OrderSummaryList } from '../../features/OrderSummaryList/OrderSummaryList';\nimport { OrderForm } from '../../features/OrderForm/OrderForm';\nimport { connect } from 'react-redux';\nimport { getAllCartProducts } from '../../../redux/cartRedux.js';\nimport { addOrder } from '../../../redux/ordersRedux';\nimport { createDate } from '../../../utils';\nimport styles from './OrderSummary.module.scss';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nclass Component extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      surname: '',\n      email: '',\n      telephone: '',\n      ordered: '',\n      orderDetails: this.props.cartProducts\n    };\n\n    this.handleChange = event => {\n      const orderData = this.state.orderData;\n      const _event$target = event.target,\n            value = _event$target.value,\n            id = _event$target.id;\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          [id]: value\n        })\n      });\n    };\n\n    this.setOrderDate = () => {\n      const orderData = this.state.orderData;\n      const date = today();\n      this.setState({\n        orderData: _objectSpread({}, orderData, {\n          ordered: date\n        })\n      });\n    };\n  }\n\n  totalCost() {\n    const cartProducts = this.props.cartProducts;\n    let totalCost = 0;\n    cartProducts.map(cartProduct => totalCost += cartProduct.totalPrice);\n    return totalCost;\n  }\n\n} // const mapStateToProps = state => ({\n//   someProp: reduxSelector(state),\n// });\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\n\nComponent.propTypes = {\n  cartProducts: PropTypes.array,\n  addOrder: PropTypes.func\n};\nexport { Component as OrderSummary // Container as OrderSummary,\n, Component as OrderSummaryComponent };","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/src/components/views/OrderSummary/OrderSummary.js"],"names":["React","PropTypes","OrderSummaryList","OrderForm","connect","getAllCartProducts","addOrder","createDate","styles","Paper","Typography","Component","state","name","surname","email","telephone","ordered","orderDetails","props","cartProducts","handleChange","event","orderData","target","value","id","setState","setOrderDate","date","today","totalCost","map","cartProduct","totalPrice","propTypes","array","func","OrderSummary","OrderSummaryComponent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,gBAAT,QAAiC,kDAAjC;AACA,SAASC,SAAT,QAA0B,oCAA1B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,SAAN,SAAwBX,KAAK,CAACW,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKNC,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,YAAY,EAAE,KAAKC,KAAL,CAAWC;AANnB,KAD8B;;AAAA,SAyBtCC,YAzBsC,GAyBtBC,KAAD,IAAW;AAAA,YAChBC,SADgB,GACF,KAAKX,KADH,CAChBW,SADgB;AAAA,4BAEFD,KAAK,CAACE,MAFJ;AAAA,YAEhBC,KAFgB,iBAEhBA,KAFgB;AAAA,YAETC,EAFS,iBAETA,EAFS;AAIxB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,SAAS,oBACJA,SADI;AAEP,WAACG,EAAD,GAAMD;AAFC;AADG,OAAd;AAMD,KAnCqC;;AAAA,SAqCtCG,YArCsC,GAqCvB,MAAM;AAAA,YACXL,SADW,GACG,KAAKX,KADR,CACXW,SADW;AAEnB,YAAMM,IAAI,GAAGC,KAAK,EAAlB;AAEA,WAAKH,QAAL,CAAc;AACZJ,QAAAA,SAAS,oBACJA,SADI;AAEPN,UAAAA,OAAO,EAAEY;AAFF;AADG,OAAd;AAMD,KA/CqC;AAAA;;AAetCE,EAAAA,SAAS,GAAG;AAAA,UACFX,YADE,GACe,KAAKD,KADpB,CACFC,YADE;AAGV,QAAIW,SAAS,GAAG,CAAhB;AAEAX,IAAAA,YAAY,CAACY,GAAb,CAAiBC,WAAW,IAAIF,SAAS,IAAIE,WAAW,CAACC,UAAzD;AAEA,WAAOH,SAAP;AACD;;AAvBqC,C,CAqDxC;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AA7DMpB,S,CAUGwB,S,GAAY;AACjBf,EAAAA,YAAY,EAAEnB,SAAS,CAACmC,KADP;AAEjB9B,EAAAA,QAAQ,EAAEL,SAAS,CAACoC;AAFH,C;AAqDrB,SACE1B,SAAS,IAAI2B,YADf,CAEE;AAFF,EAGE3B,SAAS,IAAI4B,qBAHf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { OrderSummaryList } from '../../features/OrderSummaryList/OrderSummaryList';\nimport { OrderForm } from '../../features/OrderForm/OrderForm';\n\nimport { connect } from 'react-redux';\nimport { getAllCartProducts } from '../../../redux/cartRedux.js';\nimport { addOrder } from '../../../redux/ordersRedux';\nimport { createDate } from '../../../utils';\n\nimport styles from './OrderSummary.module.scss';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nclass Component extends React.Component {\n  state = {\n    name: '',\n    surname: '',\n    email: '',\n    telephone: '',\n    ordered: '',\n    orderDetails: this.props.cartProducts,\n  }\n\n  static propTypes = {\n    cartProducts: PropTypes.array,\n    addOrder: PropTypes.func,\n  }\n\n  totalCost() {\n    const { cartProducts } = this.props;\n\n    let totalCost = 0;\n\n    cartProducts.map(cartProduct => totalCost += cartProduct.totalPrice);\n\n    return totalCost;\n  }\n\n  handleChange = (event) => {\n    const { orderData } = this.state;\n    const { value, id } = event.target;\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        [id]: value,\n      },\n    });\n  }\n\n  setOrderDate = () => {\n    const { orderData } = this.state;\n    const date = today();\n\n    this.setState({\n      orderData: {\n        ...orderData,\n        ordered: date,\n      },\n    });\n  }\n\n}\n\n\n\n// const mapStateToProps = state => ({\n//   someProp: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as OrderSummary,\n  // Container as OrderSummary,\n  Component as OrderSummaryComponent,\n};\n"]},"metadata":{},"sourceType":"module"}