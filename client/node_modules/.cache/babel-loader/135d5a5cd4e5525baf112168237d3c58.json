{"ast":null,"code":"var _jsxFileName = \"/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/src/components/views/Cart/Cart.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAllCartProducts, getCartProductsRequest } from '../../../redux/cartRedux';\nimport { CartProductList } from '../../features/CartProductList/CartProductList';\nimport { ButtonBackHomepage } from '../../common/ButtonBackHomepage/ButtonBackHomepage';\nimport Grid from '@material-ui/core/Grid';\nimport styles from './Cart.module.scss';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nclass Component extends React.Component {\n  totalCost() {\n    const cartProducts = this.props.cartProducts;\n    let totalCost = 0;\n    cartProducts.map(cartProduct => totalCost += cartProduct.totalPrice);\n    return totalCost;\n  }\n\n  componentDidMount() {\n    const getCartProducts = this.props.getCartProducts;\n    getCartProducts();\n  }\n\n  render() {\n    const cartProducts = this.props.cartProducts;\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: styles.gridContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: styles.title,\n      gutterBottom: true,\n      variant: \"h3\",\n      component: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Cart\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(CartProductList, {\n      cartProducts: cartProducts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.totalCostContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: styles.title,\n      gutterBottom: true,\n      variant: \"h4\",\n      component: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Total cost:\", this.totalCost(), \"$\")), React.createElement(Grid, {\n      item: true,\n      container: true,\n      className: styles.buttonsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: styles.buttonHomepage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      color: \"primary\",\n      className: styles.button,\n      component: NavLink,\n      exact: true,\n      to: \"/\",\n      startIcon: React.createElement(ArrowBackIosIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"BACK TO HOMEPAGE\")), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: styles.buttonOrderSummary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      color: \"primary\",\n      className: styles.button,\n      component: NavLink,\n      exact: true,\n      to: \"/order\",\n      endIcon: React.createElement(ArrowForwardIosIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"ORDER SUMMARY\")))));\n  }\n\n}\n\nComponent.propTypes = {\n  cartProducts: PropTypes.array,\n  getCartProducts: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  cartProducts: getAllCartProducts(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCartProducts: () => dispatch(getCartProductsRequest())\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport { //Component as Cart,\nContainer as Cart, Component as CartComponent };","map":{"version":3,"sources":["/Users/katarzynaiwaszko/Documents/projekty_Kodilla/Shop/client/src/components/views/Cart/Cart.js"],"names":["React","PropTypes","NavLink","connect","getAllCartProducts","getCartProductsRequest","CartProductList","ButtonBackHomepage","Grid","styles","Paper","Typography","Button","ArrowBackIosIcon","ArrowForwardIosIcon","Component","totalCost","cartProducts","props","map","cartProduct","totalPrice","componentDidMount","getCartProducts","render","gridContainer","title","totalCostContainer","buttonsContainer","buttonHomepage","button","buttonOrderSummary","propTypes","array","func","mapStateToProps","state","mapDispatchToProps","dispatch","Container","Cart","CartComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAllCartProducts, getCartProductsRequest } from '../../../redux/cartRedux';\n\nimport { CartProductList } from '../../features/CartProductList/CartProductList';\nimport { ButtonBackHomepage } from '../../common/ButtonBackHomepage/ButtonBackHomepage';\nimport Grid from '@material-ui/core/Grid';\n\nimport styles from './Cart.module.scss';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nclass Component extends React.Component {\n  static propTypes = {\n    cartProducts: PropTypes.array,\n    getCartProducts: PropTypes.func,\n  }\n\n  totalCost() {\n    const { cartProducts } = this.props;\n\n    let totalCost = 0;\n\n    cartProducts.map(cartProduct => totalCost += cartProduct.totalPrice);\n\n    return totalCost;\n  }\n\n  componentDidMount() {\n    const { getCartProducts } = this.props;\n\n    getCartProducts();\n  }\n\n  render() {\n    const { cartProducts } = this.props;\n\n\n    return(\n      <Paper>\n        <Grid container className = {styles.gridContainer}>\n          <Grid item xs={12}>\n            <Typography className={styles.title} gutterBottom variant=\"h3\" component=\"h1\">\n              Cart\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <CartProductList cartProducts={cartProducts} />\n          </Grid>\n          <Grid item xs={12} className={styles.totalCostContainer}>\n            <Typography className={styles.title} gutterBottom variant=\"h4\" component=\"h1\">\n              Total cost:{this.totalCost()}$\n            </Typography>\n          </Grid>\n          <Grid item container className={styles.buttonsContainer}>\n            <Grid item xs={6} className={styles.buttonHomepage}>\n              <Button\n                variant='contained'\n                size='large'\n                color='primary'\n                className={styles.button}\n                component={NavLink}\n                exact to={`/`}\n                startIcon={<ArrowBackIosIcon />}\n              >\n                BACK TO HOMEPAGE\n              </Button>\n            </Grid>\n            <Grid item xs={6} className={styles.buttonOrderSummary}>\n              <Button\n                variant='contained'\n                size='large'\n                color='primary'\n                className={styles.button}\n                component={NavLink}\n                exact to={`/order`}\n                endIcon={<ArrowForwardIosIcon />}\n              >\n              ORDER SUMMARY\n              </Button>\n            </Grid>         \n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: getAllCartProducts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCartProducts: () => dispatch(getCartProductsRequest()),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  //Component as Cart,\n  Container as Cart,\n  Component as CartComponent,\n};\n"]},"metadata":{},"sourceType":"module"}